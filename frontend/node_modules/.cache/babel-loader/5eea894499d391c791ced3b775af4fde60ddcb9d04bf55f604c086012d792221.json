{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brays\\\\Documents\\\\Projects\\\\JapaneseLanguageApp\\\\japanese-language-app\\\\frontend\\\\src\\\\pages\\\\VocabRevision.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './VocabRevision.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VocabRevision() {\n  _s();\n  const [words, setWords] = useState([]);\n  const [category, setCategory] = useState('verbs'); // Default category\n  const [error, setError] = useState(null);\n  const fetchWords = async () => {\n    if (!category) {\n      setError('Please select a category');\n    }\n    try {\n      const response = await axios.get(`http://localhost:5000/api/japanese-words?category=${category}`);\n      setWords(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch words');\n    }\n  };\n  const handleCategoryChange = e => {\n    setCategory(e.target.value);\n  };\n  const handleSearch = () => {\n    fetchWords();\n  };\n  const speakWord = async word => {\n    try {\n      const response = await axios.post('http://localhost:5000/speech', {\n        word\n      }, {\n        responseType: 'arraybuffer'\n      });\n      const audioData = response.data;\n      const audioBlob = new Blob([audioData], {\n        type: 'audio/mpeg'\n      });\n      const audioUrl = URL.createObjectURL(audioBlob);\n      const audio = new Audio(audioUrl);\n      audio.play();\n    } catch (error) {\n      console.error('Error with text-to-speech:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-revision-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Word Revision\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Choose a category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"category\",\n        value: category,\n        onChange: handleCategoryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"verbs\",\n          children: \"Verbs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"animals\",\n          children: \"Animals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"adjectives\",\n          children: \"Adjectives\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"numbers\",\n          children: \"Numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Load Words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), words.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-revision\",\n      children: words.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Kanji: \", word.kanji]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Hiragana: \", word.hiragana]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Meaning: \", word.meaning]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Romaji: \", word.romaji]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => speakWord(word.hiragana),\n          children: \"How to pronounce\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading words...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(VocabRevision, \"pA8vxBi3i2veuZYYwbod6KlLlqo=\");\n_c = VocabRevision;\nexport default VocabRevision;\nvar _c;\n$RefreshReg$(_c, \"VocabRevision\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","VocabRevision","_s","words","setWords","category","setCategory","error","setError","fetchWords","response","get","data","err","handleCategoryChange","e","target","value","handleSearch","speakWord","word","post","responseType","audioData","audioBlob","Blob","type","audioUrl","URL","createObjectURL","audio","Audio","play","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","onClick","length","map","index","kanji","hiragana","meaning","romaji","_c","$RefreshReg$"],"sources":["C:/Users/brays/Documents/Projects/JapaneseLanguageApp/japanese-language-app/frontend/src/pages/VocabRevision.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './VocabRevision.css';\r\n\r\nfunction VocabRevision() {\r\n  const [words, setWords] = useState([]);\r\n  const [category, setCategory] = useState('verbs'); // Default category\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchWords = async () => {\r\n    if (!category) {\r\n      setError('Please select a category');\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/japanese-words?category=${category}`);\r\n      setWords(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to fetch words');\r\n    }\r\n  };\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    fetchWords();\r\n  };\r\n\r\n  const speakWord = async (word) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/speech', { word }, { responseType: 'arraybuffer' }); \r\n      const audioData = response.data;\r\n      const audioBlob = new Blob([audioData], { type: 'audio/mpeg' });\r\n      const audioUrl = URL.createObjectURL(audioBlob);\r\n      const audio = new Audio(audioUrl);\r\n      audio.play();\r\n    } catch (error) {\r\n      console.error('Error with text-to-speech:', error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"word-revision-container\">\r\n      <h2>Word Revision</h2>\r\n\r\n      {/* Category Selection */}\r\n      <div className=\"category-selection\">\r\n        <label htmlFor=\"category\">Choose a category:</label>\r\n        <select\r\n          id=\"category\"\r\n          value={category}\r\n          onChange={handleCategoryChange}\r\n        >\r\n          <option value=\"verbs\">Verbs</option>\r\n          <option value=\"animals\">Animals</option>\r\n          <option value=\"adjectives\">Adjectives</option>\r\n          <option value=\"numbers\">Numbers</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Search Button */}\r\n      <div className=\"search-button\">\r\n        <button onClick={handleSearch}>Load Words</button>\r\n      </div>\r\n\r\n      {/* Error Message */}\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      {/* Words List */}\r\n      {words.length > 0 ? (\r\n        <div className=\"word-revision\">\r\n          {words.map((word, index) => (\r\n            <div key={index} className=\"word-card\">\r\n              <h3>Kanji: {word.kanji}</h3>\r\n              <h4>Hiragana: {word.hiragana}</h4>\r\n              <p>Meaning: {word.meaning}</p>\r\n              <p>Romaji: {word.romaji}</p>\r\n              <button onClick={() => speakWord(word.hiragana)}>How to pronounce</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p className=\"loading\">Loading words...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VocabRevision;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}