{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brays\\\\Documents\\\\Projects\\\\JapaneseLanguageApp\\\\japanese-language-app\\\\frontend\\\\src\\\\components\\\\WordRevision.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './WordRevision.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WordRevision() {\n  _s();\n  const [words, setWords] = useState([]);\n  const [category, setCategory] = useState('verbs'); // Default category\n  const [error, setError] = useState(null);\n  const fetchWords = async () => {\n    if (!category) {\n      setError('Please select a category');\n    }\n    try {\n      const response = await axios.get(`http://localhost:5000/api/japanese-words?category=${category}`);\n      console.log(response.data);\n      setWords(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch words');\n    }\n  };\n  const handleCategoryChange = e => {\n    setCategory(e.target.value);\n  };\n  const handleSearch = () => {\n    fetchWords();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-revision-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Word Revision\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Choose a category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"category\",\n        value: category,\n        onChange: handleCategoryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"verbs\",\n          children: \"Verbs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"animals\",\n          children: \"Animals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"adjectives\",\n          children: \"Adjectives\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"numbers\",\n          children: \"Numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Load Words\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this), words.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-revision\",\n      children: words.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Kanji: \", word.kanji]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Hiragana: \", word.hiragana]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Meaning: \", word.meaning]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Romaji: \", word.romaji]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading words...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(WordRevision, \"pA8vxBi3i2veuZYYwbod6KlLlqo=\");\n_c = WordRevision;\nexport default WordRevision;\nvar _c;\n$RefreshReg$(_c, \"WordRevision\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","WordRevision","_s","words","setWords","category","setCategory","error","setError","fetchWords","response","get","console","log","data","err","handleCategoryChange","e","target","value","handleSearch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","onClick","length","map","word","index","kanji","hiragana","meaning","romaji","_c","$RefreshReg$"],"sources":["C:/Users/brays/Documents/Projects/JapaneseLanguageApp/japanese-language-app/frontend/src/components/WordRevision.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './WordRevision.css';\r\n\r\nfunction WordRevision() {\r\n  const [words, setWords] = useState([]);\r\n  const [category, setCategory] = useState('verbs'); // Default category\r\n  const [error, setError] = useState(null);\r\n    const fetchWords = async () => {\r\n        if (!category) {\r\n            setError('Please select a category')\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/japanese-words?category=${category}`);\r\n            console.log(response.data)\r\n            setWords(response.data)\r\n            setError(null)\r\n        } catch (err) {\r\n            setError('Failed to fetch words')\r\n        }\r\n    };\r\n\r\n    const handleCategoryChange = (e) => {\r\n        setCategory(e.target.value)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        fetchWords();\r\n    }\r\n\r\n    return (\r\n        <div className=\"word-revision-container\">\r\n          <h2>Word Revision</h2>\r\n      \r\n          {/* Category Selection */}\r\n          <div>\r\n            <label htmlFor=\"category\">Choose a category:</label>\r\n            <select\r\n              id=\"category\"\r\n              value={category}\r\n              onChange={handleCategoryChange}\r\n            >\r\n              <option value=\"verbs\">Verbs</option>\r\n              <option value=\"animals\">Animals</option>\r\n              <option value=\"adjectives\">Adjectives</option>\r\n              <option value=\"numbers\">Numbers</option>\r\n            </select>\r\n          </div>\r\n      \r\n          {/* Search Button */}\r\n          <button onClick={handleSearch}>Load Words</button>\r\n      \r\n          {/* Error Message */}\r\n          {error && <p className=\"error\">{error}</p>}\r\n      \r\n          {/* Words List */}\r\n          {words.length > 0 ? (\r\n            <div className=\"word-revision\">\r\n              {words.map((word, index) => (\r\n                <div key={index} className=\"word\">\r\n                  <h3>Kanji: {word.kanji}</h3>\r\n                  <h4>Hiragana: {word.hiragana}</h4>\r\n                  <p>Meaning: {word.meaning}</p>\r\n                  <p>Romaji: {word.romaji}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <p>Loading words...</p>\r\n          )}\r\n        </div>\r\n      );\r\n      \r\n\r\n}\r\n\r\nexport default WordRevision;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACnD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAACJ,QAAQ,EAAE;MACXG,QAAQ,CAAC,0BAA0B,CAAC;IACxC;IAEA,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,qDAAqDN,QAAQ,EAAE,CAAC;MACjGO,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC1BV,QAAQ,CAACM,QAAQ,CAACI,IAAI,CAAC;MACvBN,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACVP,QAAQ,CAAC,uBAAuB,CAAC;IACrC;EACJ,CAAC;EAED,MAAMQ,oBAAoB,GAAIC,CAAC,IAAK;IAChCX,WAAW,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBX,UAAU,CAAC,CAAC;EAChB,CAAC;EAED,oBACIT,OAAA;IAAKqB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCtB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGtB1B,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAO2B,OAAO,EAAC,UAAU;QAAAL,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpD1B,OAAA;QACE4B,EAAE,EAAC,UAAU;QACbT,KAAK,EAAEd,QAAS;QAChBwB,QAAQ,EAAEb,oBAAqB;QAAAM,QAAA,gBAE/BtB,OAAA;UAAQmB,KAAK,EAAC,OAAO;UAAAG,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpC1B,OAAA;UAAQmB,KAAK,EAAC,SAAS;UAAAG,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxC1B,OAAA;UAAQmB,KAAK,EAAC,YAAY;UAAAG,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9C1B,OAAA;UAAQmB,KAAK,EAAC,SAAS;UAAAG,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN1B,OAAA;MAAQ8B,OAAO,EAAEV,YAAa;MAAAE,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGjDnB,KAAK,iBAAIP,OAAA;MAAGqB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGzCvB,KAAK,CAAC4B,MAAM,GAAG,CAAC,gBACf/B,OAAA;MAAKqB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BnB,KAAK,CAAC6B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBlC,OAAA;QAAiBqB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAC/BtB,OAAA;UAAAsB,QAAA,GAAI,SAAO,EAACW,IAAI,CAACE,KAAK;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5B1B,OAAA;UAAAsB,QAAA,GAAI,YAAU,EAACW,IAAI,CAACG,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClC1B,OAAA;UAAAsB,QAAA,GAAG,WAAS,EAACW,IAAI,CAACI,OAAO;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9B1B,OAAA;UAAAsB,QAAA,GAAG,UAAQ,EAACW,IAAI,CAACK,MAAM;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJpBQ,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAEN1B,OAAA;MAAAsB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAId;AAACxB,EAAA,CAvEQD,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAyErB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}