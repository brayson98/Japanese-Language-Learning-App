{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brays\\\\Documents\\\\Projects\\\\JapaneseLanguageApp\\\\japanese-language-app\\\\frontend\\\\src\\\\components\\\\HiraganaQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HiraganaQuiz() {\n  _s();\n  const [hiragana, setHiragana] = useState([]);\n  const [currentFlashcard, setCurrentFlashcard] = useState(null);\n  const [userInput, setUserInput] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [score, setScore] = useState(0);\n  const [questionCount, setQuestionCount] = useState(0);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/japanese/characters').then(response => {\n      const limitedHiragana = response.data.hiragana.slice(0, 10); // Limit to 10 characters\n      setHiragana(limitedHiragana);\n      setCurrentFlashcard(getRandomFlashcard(limitedHiragana));\n    }).catch(error => console.error(error));\n  }, []);\n  const getRandomFlashcard = hiraganaArray => {\n    const randomIndex = Math.floor(Math.random() * hiraganaArray.length);\n    return hiraganaArray[randomIndex];\n  };\n  const handleAnswer = () => {\n    if (currentFlashcard) {\n      if (userInput.toLowerCase() === currentFlashcard.romaji) {\n        setFeedback('Correct!');\n        setScore(score + 1);\n      } else {\n        setFeedback(`Incorrect. The correct answer is ${currentFlashcard.romaji}.`);\n      }\n\n      // Automatically go to the next character after 1 second\n      setTimeout(() => {\n        if (questionCount < 9) {\n          setCurrentFlashcard(getRandomFlashcard(hiragana));\n          setUserInput('');\n          setFeedback('');\n          setQuestionCount(questionCount + 1);\n        } else {\n          setCurrentFlashcard(null); // End the quiz\n        }\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcard-quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hiragana Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), currentFlashcard ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcard-quiz\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"flashcard-character\",\n          children: currentFlashcard.character\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"user-input\",\n          type: \"text\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          placeholder: \"Type the romaji\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"check-button\",\n            onClick: handleAnswer,\n            children: \"Check Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"feedback\",\n            children: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: questionCount === 10 ? `Quiz Over! Your final score is ${score}.` : 'Loading flashcards...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n}\n_s(HiraganaQuiz, \"0LspiKTgut7xfCbtRLHOPe125jc=\");\n_c = HiraganaQuiz;\nexport default HiraganaQuiz;\nvar _c;\n$RefreshReg$(_c, \"HiraganaQuiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","HiraganaQuiz","_s","hiragana","setHiragana","currentFlashcard","setCurrentFlashcard","userInput","setUserInput","feedback","setFeedback","score","setScore","questionCount","setQuestionCount","get","then","response","limitedHiragana","data","slice","getRandomFlashcard","catch","error","console","hiraganaArray","randomIndex","Math","floor","random","length","handleAnswer","toLowerCase","romaji","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","character","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/brays/Documents/Projects/JapaneseLanguageApp/japanese-language-app/frontend/src/components/HiraganaQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Quiz.css'\r\n\r\nfunction HiraganaQuiz() {\r\n    const [hiragana, setHiragana] = useState([]);\r\n    const [currentFlashcard, setCurrentFlashcard] = useState(null);\r\n    const [userInput, setUserInput] = useState('');\r\n    const [feedback, setFeedback] = useState('');\r\n    const [score, setScore] = useState(0);\r\n    const [questionCount, setQuestionCount] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n      axios\r\n        .get('http://localhost:5000/api/japanese/characters')\r\n        .then((response) => {\r\n          const limitedHiragana = response.data.hiragana.slice(0, 10); // Limit to 10 characters\r\n          setHiragana(limitedHiragana);\r\n          setCurrentFlashcard(getRandomFlashcard(limitedHiragana));\r\n        })\r\n        .catch((error) => console.error(error));\r\n    }, []);\r\n\r\n    const getRandomFlashcard = (hiraganaArray) => {\r\n      const randomIndex = Math.floor(Math.random() * hiraganaArray.length);\r\n      return hiraganaArray[randomIndex];\r\n    };\r\n\r\n    const handleAnswer = () => {\r\n      if (currentFlashcard) {\r\n        if (userInput.toLowerCase() === currentFlashcard.romaji) {\r\n          setFeedback('Correct!');\r\n          setScore(score + 1);\r\n        } else {\r\n          setFeedback(`Incorrect. The correct answer is ${currentFlashcard.romaji}.`);\r\n        }\r\n  \r\n        // Automatically go to the next character after 1 second\r\n        setTimeout(() => {\r\n          if (questionCount < 9) {\r\n            setCurrentFlashcard(getRandomFlashcard(hiragana));\r\n            setUserInput('');\r\n            setFeedback('');\r\n            setQuestionCount(questionCount + 1);\r\n          } else {\r\n            setCurrentFlashcard(null); // End the quiz\r\n          }\r\n        }, 1000);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"flashcard-quiz-container\">\r\n        <h1>Hiragana Quiz</h1>\r\n        <p>Score: {score}</p>\r\n        {currentFlashcard ? (\r\n          <div className=\"flashcard-quiz\">\r\n            <div className=\"flashcard\">\r\n              <h1 className=\"flashcard-character\">{currentFlashcard.character}</h1>\r\n              <input\r\n                className=\"user-input\"\r\n                type=\"text\"\r\n                value={userInput}\r\n                onChange={(e) => setUserInput(e.target.value)}\r\n                placeholder=\"Type the romaji\"\r\n              />\r\n              <div className=\"feedback-container\">\r\n                <button className=\"check-button\" onClick={handleAnswer}>\r\n                  Check Answer\r\n                </button>\r\n                <p className=\"feedback\">{feedback}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p>{questionCount === 10 ? `Quiz Over! Your final score is ${score}.` : 'Loading flashcards...'}</p>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default HiraganaQuiz"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}