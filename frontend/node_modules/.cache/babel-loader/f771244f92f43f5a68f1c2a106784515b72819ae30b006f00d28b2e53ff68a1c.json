{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brays\\\\Documents\\\\Projects\\\\JapaneseLanguageApp\\\\japanese-language-app\\\\src\\\\components\\\\Flashcards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Flashcards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Flashcards() {\n  _s();\n  const [characters, setCharacters] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/japanese/characters') // Change this URL based on your backend\n    .then(response => {\n      setCharacters(response.data); // Store the fetched data in the state\n    }).catch(error => {\n      console.error('Error fetching characters:', error);\n    });\n  }, []);\n  if (!characters) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this); // Show loading state until data is fetched\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hiragana and Katakana Flashcards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Hiragana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-container\",\n          children: characters.hiragana.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flashcard\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: card.character\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: card.romaji\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Katakana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-container\",\n          children: characters.katakana.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flashcard\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: card.character\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: card.romaji\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Flashcards, \"MOMvGWjO9onBOL+/lvh22KN3LD4=\");\n_c = Flashcards;\nexport default Flashcards;\nvar _c;\n$RefreshReg$(_c, \"Flashcards\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Flashcards","_s","characters","setCharacters","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","hiragana","map","card","index","character","romaji","katakana","_c","$RefreshReg$"],"sources":["C:/Users/brays/Documents/Projects/JapaneseLanguageApp/japanese-language-app/src/components/Flashcards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Flashcards.css';\r\n\r\nfunction Flashcards() {\r\n    const [characters, setCharacters] = useState(null)\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get('http://localhost:5000/api/japanese/characters') // Change this URL based on your backend\r\n        .then((response) => {\r\n        setCharacters(response.data); // Store the fetched data in the state\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error fetching characters:', error);\r\n          });\r\n    }, [])\r\n\r\n    if (!characters) {\r\n        return <div>Loading...</div>; // Show loading state until data is fetched\r\n      }\r\n    \r\n      return (\r\n        <div>\r\n          <h1>Hiragana and Katakana Flashcards</h1>\r\n          <div className=\"flashcards\">\r\n            {/* Display Hiragana flashcards */}\r\n            <div>\r\n              <h2>Hiragana</h2>\r\n              <div className=\"card-container\">\r\n                {characters.hiragana.map((card, index) => (\r\n                  <div key={index} className=\"flashcard\">\r\n                    <p>{card.character}</p>\r\n                    <p>{card.romaji}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n    \r\n            {/* Display Katakana flashcards */}\r\n            <div>\r\n              <h2>Katakana</h2>\r\n              <div className=\"card-container\">\r\n                {characters.katakana.map((card, index) => (\r\n                  <div key={index} className=\"flashcard\">\r\n                    <p>{card.character}</p>\r\n                    <p>{card.romaji}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Flashcards"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}