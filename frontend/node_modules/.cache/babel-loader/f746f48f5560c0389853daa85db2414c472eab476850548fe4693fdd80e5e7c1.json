{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brays\\\\Documents\\\\Projects\\\\JapaneseLanguageApp\\\\japanese-language-app\\\\frontend\\\\src\\\\pages\\\\Katakana.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Flashcards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Katakana() {\n  _s();\n  const [katakana, setKatakana] = useState([]);\n  const [flipped, setFlipped] = useState({});\n  const [showQuiz, setShowQuiz] = useState(false);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/japanese/characters').then(response => {\n      setKatakana(response.data.katakana);\n    }).catch(error => console.error(error));\n  }, []);\n  const handleClick = index => {\n    setFlipped(prevState => ({\n      ...prevState,\n      [index]: !prevState[index]\n    }));\n  };\n  const resetFlipState = () => {\n    setFlipped({});\n  };\n  const toggleQuiz = () => {\n    setShowQuiz(prev => !prev);\n    resetFlipState();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Katakana\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetFlipState,\n      className: \"reset-button\",\n      children: \"Show Japanese Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-list\",\n      children: katakana.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character\",\n        onClick: () => handleClick(index),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `character-inner ${flipped[index] ? 'flipped' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"character-front\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: card.character\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"character-back\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: card.romaji\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Katakana, \"cs88NYV8pbpjuLgHsJdMBV4PXq8=\");\n_c = Katakana;\nexport default Katakana;\nvar _c;\n$RefreshReg$(_c, \"Katakana\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Katakana","_s","katakana","setKatakana","flipped","setFlipped","showQuiz","setShowQuiz","get","then","response","data","catch","error","console","handleClick","index","prevState","resetFlipState","toggleQuiz","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","card","character","romaji","_c","$RefreshReg$"],"sources":["C:/Users/brays/Documents/Projects/JapaneseLanguageApp/japanese-language-app/frontend/src/pages/Katakana.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Flashcards.css';\r\n\r\nfunction Katakana() {\r\n  const [katakana, setKatakana] = useState([]);\r\n  const [flipped, setFlipped] = useState({});\r\n  const [showQuiz, setShowQuiz] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/japanese/characters')\r\n      .then(response => {\r\n        setKatakana(response.data.katakana);\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n  \r\n  const handleClick = (index) => {\r\n    setFlipped((prevState) => ({\r\n      ...prevState,\r\n      [index]: !prevState[index], \r\n    }));\r\n  };\r\n\r\n  \r\n  const resetFlipState = () => {\r\n    setFlipped({});\r\n  };\r\n\r\n  const toggleQuiz = () => {\r\n    setShowQuiz((prev) => !prev);  \r\n    resetFlipState();  \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Katakana</h1>\r\n      <button onClick={resetFlipState} className=\"reset-button\">\r\n        Show Japanese Characters\r\n      </button>\r\n      <div className=\"character-list\">\r\n        {katakana.map((card, index) => (\r\n          <div key={index} className=\"character\" onClick={() => handleClick(index)}>\r\n            <div className={`character-inner ${flipped[index] ? 'flipped' : ''}`}>\r\n              <div className=\"character-front\">\r\n                <h2>{card.character}</h2>\r\n              </div>\r\n              <div className=\"character-back\">\r\n                <h3>{card.romaji}</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Katakana;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}