{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brays\\\\Documents\\\\Projects\\\\JapaneseLanguageApp\\\\japanese-language-app\\\\frontend\\\\src\\\\components\\\\Flashcards.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Flashcards.css'; // We'll create the CSS for the flip effect\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Flashcards({\n  characters\n}) {\n  _s();\n  const [flipped, setFlipped] = useState(false);\n  const handleClick = () => {\n    setFlipped(!flipped);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcard-container\",\n    children: characters.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcard\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flashcard-inner ${flipped ? 'flipped' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-front\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: card.character\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-back\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: card.romaji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(Flashcards, \"QYn2hzWSEiNCpFk01FECw92BS70=\");\n_c = Flashcards;\nexport default Flashcards;\nvar _c;\n$RefreshReg$(_c, \"Flashcards\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Flashcards","characters","_s","flipped","setFlipped","handleClick","className","children","map","card","index","onClick","character","fileName","_jsxFileName","lineNumber","columnNumber","romaji","_c","$RefreshReg$"],"sources":["C:/Users/brays/Documents/Projects/JapaneseLanguageApp/japanese-language-app/frontend/src/components/Flashcards.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Flashcards.css'; // We'll create the CSS for the flip effect\r\n\r\nfunction Flashcards({ characters }) {\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setFlipped(!flipped);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flashcard-container\">\r\n      {characters.map((card, index) => (\r\n        <div className=\"flashcard\" key={index} onClick={handleClick}>\r\n          <div className={`flashcard-inner ${flipped ? 'flipped' : ''}`}>\r\n            <div className=\"flashcard-front\">\r\n              <h2>{card.character}</h2> {/* Japanese character (Hiragana/Katakana) */}\r\n            </div>\r\n            <div className=\"flashcard-back\">\r\n              <h3>{card.romaji}</h3> {/* English sound (romaji) */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Flashcards;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,UAAUA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBD,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,oBACEJ,OAAA;IAAKO,SAAS,EAAC,qBAAqB;IAAAC,QAAA,EACjCN,UAAU,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BX,OAAA;MAAKO,SAAS,EAAC,WAAW;MAAaK,OAAO,EAAEN,WAAY;MAAAE,QAAA,eAC1DR,OAAA;QAAKO,SAAS,EAAE,mBAAmBH,OAAO,GAAG,SAAS,GAAG,EAAE,EAAG;QAAAI,QAAA,gBAC5DR,OAAA;UAAKO,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BR,OAAA;YAAAQ,QAAA,EAAKE,IAAI,CAACG;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACNjB,OAAA;UAAKO,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BR,OAAA;YAAAQ,QAAA,EAAKE,IAAI,CAACQ;UAAM;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,GARwBN,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAShC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACd,EAAA,CAvBQF,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AAyBnB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}