{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brays\\\\Documents\\\\Projects\\\\JapaneseLanguageApp\\\\japanese-language-app\\\\frontend\\\\src\\\\components\\\\Hiragana_Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../pages/Flashcards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HiraganaQuiz() {\n  _s();\n  const [hiragana, setHiragana] = useState([]);\n  const [currentFlashcard, setCurrentFlashcard] = useState(null);\n  const [userInput, setUserInput] = useState('');\n  const [feedback, setFeedback] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/japanese/characters').then(response => {\n      setHiragana(response.data.hiragana);\n      setCurrentFlashcard(getRandomFlashcard(response.data.hiragana));\n    }).catch(error => console.error(error));\n  }, []);\n  const getRandomFlashcard = hiraganaArray => {\n    const randomIndex = Math.floor(Math.random() * hiraganaArray.length);\n    return hiraganaArray[randomIndex];\n  };\n  const checkAnswer = () => {\n    if (currentFlashcard && userInput.toLowerCase() === currentFlashcard.romaji) {\n      setFeedback('Correct!');\n    } else {\n      setFeedback(`Incorrect. The correct answer is ${currentFlashcard === null || currentFlashcard === void 0 ? void 0 : currentFlashcard.romaji}.`);\n    }\n  };\n  const nextFlashcard = () => {\n    setCurrentFlashcard(getRandomFlashcard(hiragana));\n    setUserInput('');\n    setFeedback('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcard-quiz\",\n    children: currentFlashcard ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: currentFlashcard.character\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: \"Type the romaji\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswer,\n        children: \"Check Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextFlashcard,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading flashcards...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(HiraganaQuiz, \"EGkE5q5m+pwMdO3iOmSOMEt4BAE=\");\n_c = HiraganaQuiz;\nexport default HiraganaQuiz;\nvar _c;\n$RefreshReg$(_c, \"HiraganaQuiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","HiraganaQuiz","_s","hiragana","setHiragana","currentFlashcard","setCurrentFlashcard","userInput","setUserInput","feedback","setFeedback","get","then","response","data","getRandomFlashcard","catch","error","console","hiraganaArray","randomIndex","Math","floor","random","length","checkAnswer","toLowerCase","romaji","nextFlashcard","className","children","character","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/brays/Documents/Projects/JapaneseLanguageApp/japanese-language-app/frontend/src/components/Hiragana_Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../pages/Flashcards.css'\r\n\r\nfunction HiraganaQuiz() {\r\n    const [hiragana, setHiragana] = useState([]);\r\n    const [currentFlashcard, setCurrentFlashcard] = useState(null);\r\n    const [userInput, setUserInput] = useState('');\r\n    const [feedback, setFeedback] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/japanese/characters')\r\n      .then(response => {\r\n        setHiragana(response.data.hiragana); \r\n        setCurrentFlashcard(getRandomFlashcard(response.data.hiragana));\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n  const getRandomFlashcard = (hiraganaArray) => {\r\n    const randomIndex = Math.floor(Math.random() * hiraganaArray.length);\r\n    return hiraganaArray[randomIndex];\r\n};\r\n\r\n\r\nconst checkAnswer = () => {\r\n    if (currentFlashcard && userInput.toLowerCase() === currentFlashcard.romaji) {\r\n        setFeedback('Correct!');\r\n    } else {\r\n        setFeedback(`Incorrect. The correct answer is ${currentFlashcard?.romaji}.`);\r\n    }\r\n};\r\n\r\nconst nextFlashcard = () => {\r\n    setCurrentFlashcard(getRandomFlashcard(hiragana));\r\n    setUserInput(''); \r\n    setFeedback(''); \r\n};\r\n\r\nreturn (\r\n    <div className=\"flashcard-quiz\">\r\n        {currentFlashcard ? (\r\n            <div className=\"flashcard\">\r\n                <h1>{currentFlashcard.character}</h1>\r\n                <input\r\n                    type=\"text\"\r\n                    value={userInput}\r\n                    onChange={(e) => setUserInput(e.target.value)}\r\n                    placeholder=\"Type the romaji\"\r\n                />\r\n                <button onClick={checkAnswer}>Check Answer</button>\r\n                <button onClick={nextFlashcard}>Next</button>\r\n                <p>{feedback}</p>\r\n            </div>\r\n        ) : (\r\n            <p>Loading flashcards...</p>\r\n        )}\r\n    </div>\r\n);\r\n\r\n}\r\n\r\nexport default HiraganaQuiz"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAG9CC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACa,GAAG,CAAC,+CAA+C,CAAC,CACvDC,IAAI,CAACC,QAAQ,IAAI;MAChBT,WAAW,CAACS,QAAQ,CAACC,IAAI,CAACX,QAAQ,CAAC;MACnCG,mBAAmB,CAACS,kBAAkB,CAACF,QAAQ,CAACC,IAAI,CAACX,QAAQ,CAAC,CAAC;IACjE,CAAC,CAAC,CACDa,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMF,kBAAkB,GAAII,aAAa,IAAK;IAC5C,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,aAAa,CAACK,MAAM,CAAC;IACpE,OAAOL,aAAa,CAACC,WAAW,CAAC;EACrC,CAAC;EAGD,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIpB,gBAAgB,IAAIE,SAAS,CAACmB,WAAW,CAAC,CAAC,KAAKrB,gBAAgB,CAACsB,MAAM,EAAE;MACzEjB,WAAW,CAAC,UAAU,CAAC;IAC3B,CAAC,MAAM;MACHA,WAAW,CAAC,oCAAoCL,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEsB,MAAM,GAAG,CAAC;IAChF;EACJ,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBtB,mBAAmB,CAACS,kBAAkB,CAACZ,QAAQ,CAAC,CAAC;IACjDK,YAAY,CAAC,EAAE,CAAC;IAChBE,WAAW,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACIV,OAAA;IAAK6B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1BzB,gBAAgB,gBACbL,OAAA;MAAK6B,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtB9B,OAAA;QAAA8B,QAAA,EAAKzB,gBAAgB,CAAC0B;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrCnC,OAAA;QACIoC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE9B,SAAU;QACjB+B,QAAQ,EAAGC,CAAC,IAAK/B,YAAY,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CI,WAAW,EAAC;MAAiB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFnC,OAAA;QAAQ0C,OAAO,EAAEjB,WAAY;QAAAK,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnDnC,OAAA;QAAQ0C,OAAO,EAAEd,aAAc;QAAAE,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7CnC,OAAA;QAAA8B,QAAA,EAAIrB;MAAQ;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,gBAENnC,OAAA;MAAA8B,QAAA,EAAG;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC9B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGV;AAACjC,EAAA,CAzDQD,YAAY;AAAA0C,EAAA,GAAZ1C,YAAY;AA2DrB,eAAeA,YAAY;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}