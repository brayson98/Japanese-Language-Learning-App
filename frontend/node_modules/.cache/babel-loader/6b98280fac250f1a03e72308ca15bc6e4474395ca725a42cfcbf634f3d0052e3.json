{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brays\\\\Documents\\\\Projects\\\\JapaneseLanguageApp\\\\japanese-language-app\\\\frontend\\\\src\\\\components\\\\RandomWord.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './RandomWord.css'; // Optional for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RandomWord() {\n  _s();\n  const [wordData, setWordData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const fetchRandomWord = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/api/japanese/random_word');\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setWordData(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchRandomWord();\n  }, []); // Fetch on component load\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"random-word-container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this), wordData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random-word\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: wordData.word || 'No Word Available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Reading: \", wordData.reading]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Definition: \", wordData.definition]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchRandomWord,\n        children: \"Get Another Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(RandomWord, \"F0P0Vk31OBfs5rkcDFHFWy09xfA=\");\n_c = RandomWord;\nexport default RandomWord;\nvar _c;\n$RefreshReg$(_c, \"RandomWord\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","RandomWord","_s","wordData","setWordData","error","setError","loading","setLoading","fetchRandomWord","response","fetch","ok","Error","statusText","data","json","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","word","reading","definition","onClick","_c","$RefreshReg$"],"sources":["C:/Users/brays/Documents/Projects/JapaneseLanguageApp/japanese-language-app/frontend/src/components/RandomWord.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './RandomWord.css'; // Optional for styling\r\n\r\nfunction RandomWord() {\r\n    const [wordData, setWordData] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const fetchRandomWord = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/japanese/random_word');\r\n            if (!response.ok) {\r\n              throw new Error(`Error: ${response.statusText}`);\r\n            }\r\n            const data = await response.json();\r\n            setWordData(data);\r\n          } catch (err) {\r\n            setError(err.message);\r\n          } finally {\r\n            setLoading(false);\r\n          }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRandomWord();\r\n    }, []); // Fetch on component load\r\n\r\n    return (\r\n        <div className=\"random-word-container\">\r\n          {loading && <p>Loading...</p>}\r\n          {error && <p>Error: {error}</p>}\r\n          {wordData && (\r\n            <div className=\"random-word\">\r\n              <h1>{wordData.word || 'No Word Available'}</h1>\r\n              <p>Reading: {wordData.reading}</p>\r\n              <p>Definition: {wordData.definition}</p>\r\n              <button onClick={fetchRandomWord}>Get Another Word</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default RandomWord;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChCD,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,CAAC;MAC9E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,UAAUH,QAAQ,CAACI,UAAU,EAAE,CAAC;MAClD;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCZ,WAAW,CAACW,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZX,QAAQ,CAACW,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC;IACnB;EACN,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZY,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIT,OAAA;IAAKmB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,GACnCb,OAAO,iBAAIP,OAAA;MAAAoB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5BnB,KAAK,iBAAIL,OAAA;MAAAoB,QAAA,GAAG,SAAO,EAACf,KAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BrB,QAAQ,iBACPH,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BpB,OAAA;QAAAoB,QAAA,EAAKjB,QAAQ,CAACsB,IAAI,IAAI;MAAmB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/CxB,OAAA;QAAAoB,QAAA,GAAG,WAAS,EAACjB,QAAQ,CAACuB,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClCxB,OAAA;QAAAoB,QAAA,GAAG,cAAY,EAACjB,QAAQ,CAACwB,UAAU;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCxB,OAAA;QAAQ4B,OAAO,EAAEnB,eAAgB;QAAAW,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEd;AAACtB,EAAA,CAzCQD,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AA2CnB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}